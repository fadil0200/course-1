import cv2
import threading
from deepface import DeepFace

cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

verification_frequency = 40  # Verify every 40th frame

frame_counter = 0
face_match = False
reference_img = None  # Initialize reference image


def capture_reference():
    global reference_img
    ret, ref_frame = cap.read()  # Capture a frame
    if ret:
        reference_img = ref_frame.copy()  # Set captured frame as reference image


def check_face(frame, reference_img):
    global face_match
    try:
        verified = DeepFace.verify(frame, reference_img)['verified']
        face_match = verified
    except Exception as e:
        print(f"Error during face verification: {e}")
        face_match = False


while True:
    ret, frame = cap.read()

    if ret:
        frame_counter += 1
        if frame_counter % verification_frequency == 0:
            if reference_img is not None:
                threading.Thread(target=check_face, args=(frame.copy(), reference_img)).start()

    if face_match:
        cv2.putText(frame, "match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 255, 0), thickness=2)
    else:
        cv2.putText(frame, "no match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 0, 255), thickness=2)

    # Display instructions to capture reference image
    cv2.putText(frame, "Press 'c' to capture reference image", (20, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255),
                thickness=2)
    cv2.imshow("video", frame)

    key = cv2.waitKey(1)

    if key == ord("q"):
        break
    elif key == ord("c"):  # Capture reference image when 'c' is pressed
        threading.Thread(target=capture_reference).start()

# Release resources
cap.release()
cv2.destroyAllWindows()
