import cv2
import threading
from deepface import DeepFace

cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

reference_images = ["reference.jpg","reference2.jpg", "reference3.jpg"]  # Add paths to all reference image
verification_frequency = 40  # Verify every 60th frame

frame_counter = 0
face_match = False

def check_face(frame, reference_images):
    global face_match
    try:
        for reference_path in reference_images:
            reference_img = cv2.imread(reference_path)
            if reference_img is not None:
                verified = DeepFace.verify(frame, reference_img)['verified']
                if verified:
                    face_match = True
                    return
    except Exception as e:
        print(f"Error during face verification for image {reference_path}: {e}")
        face_match = False


while True:
    ret, frame = cap.read()

    if ret:
        frame_counter += 1
        if frame_counter % verification_frequency == 0:
            threading.Thread(target=check_face, args=(frame.copy(), reference_images)).start()

    if face_match:
        cv2.putText(frame, "match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 255, 0), thickness=2)
    else:
        cv2.putText(frame, "no match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 0, 255), thickness=2)
    cv2.imshow("video", frame)

    key = cv2.waitKey(1)

    if key == ord("q"):
        break

# Release resources
cap.release()
cv2.destroyAllWindows()
